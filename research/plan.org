* Evolutionäre Algorithmen
Einzelne Wesen werden „gezüchtet,“ und diese werden dann gepaart.
Dabei soll sich der Wert von Generation zu Generation verbessern,
wobei schlechter funktionierende Wesen aussterben müssen.

Die Paarung („Routen“) sind Matrizen, die verschmolzen werden sollen,
was mit verschiedenen Möglickeiten, diese zu komibinieren oder zu
mutieren, möglich wird (Evolutionäre Algorithmen Kap. 2.3).

Crossover, damit bisher erzielte, gute Ergebnisse nicht wieder
verschlechtert werden.

** Klärung der biologischen Begriffe

*** Individuum
Genotyp und Phänotyp ergeben ein Individuum. Mögliche Lösung für ein
Optimierungsproblem, z.B. eine mögliche Rundreise beim TSP.

Genotyp = Beinhaltet die im Individuum manipulierbaren Informationen
3-Tupel aus (A.G, A.S, A.F) (Genotyp, Zusatzinfo, Fitness)
Phänotyp = dekodieren der Information aus dem Genotyp

*** Rekombination
Paarung. Erstellen eines Individuums aus 2 oder mehr Individuen.

*** Mutation
Kleine Veränderung am Genotyp

*** Fitness bzw. Fitnessfunktion
Bewertung des Individuums im Hinblick auf das Optimierungsproblem

*** Optimierungsproblem
3-Tupel (Ω, f , <)
Ω - Suchraum
f - Bewertungsfunktion
~ - Vergleichsrelation ∈ {<, >}

X = { x ∈ Ω | ∀ x' ∈ Ω : f(x) ~ f(x') }
X ∈ Ω


* Distributierte Algorithmen
Was können wir parallelisiseren?  In welcher Sprache soll das gemacht
werden – Erlang oder C/C++? NIFs in Erlang würden die Schnittstelle
zwischen den beiden Sprachen darstellen.

Parallelisieren über Message Passing.

* Erlang version
CI für die Versionen 18 und 16
